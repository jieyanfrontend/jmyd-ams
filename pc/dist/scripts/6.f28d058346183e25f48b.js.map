{"version":3,"sources":["webpack:///./pages/login/login.css","webpack:///./pages/login/login.js"],"names":["module","exports","container","form","login_btn_group","login_btn","_react","__webpack_require__","_reactRouterDom","_login","_request","Login","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleRequest","_ref","userName","password","_request2","default","url","data","user","success","setState","loginSuccess","fail","console","log","handleSubmit","e","preventDefault","validateFields","err","values","hasErrors","fieldsError","keys","some","field","state","_props$form","getFieldDecorator","isFieldTouched","getFieldError","getFieldsError","userNameErr","passwordErr","_react2","createElement","className","_login2","Redirect","to","_form2","onSubmit","Item","validateStatus","help","rules","required","message","_input2","size","prefix","_icon2","type","style","color","placeholder","valuePropName","initialValue","_checkbox2","_button2","disabled","htmlType","Component","LoginForm","create"],"mappings":"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","file":"scripts/6.f28d058346183e25f48b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login__container\",\"form\":\"login__form\",\"login_btn_group\":\"login__login_btn_group\",\"login_btn\":\"login__login_btn\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Input, Icon, Button, Checkbox } from 'antd';\r\nimport style from './login.css';\r\nimport request from '../../helpers/request';\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loginSuccess: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let { loginSuccess } = this.state;\r\n        const { getFieldDecorator, isFieldTouched, getFieldError, getFieldsError } = this.props.form;\r\n        const userNameErr = isFieldTouched('userName') && getFieldError('userName');\r\n        const passwordErr = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <div className={style.container}>\r\n                {loginSuccess ? <Redirect to='/'/>: null}\r\n                <div className={style.form}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Item validateStatus={userNameErr ? 'error' : ''} help={userNameErr || ''}>\r\n                            {getFieldDecorator('userName', {\r\n                                rules: [{ required: true, message: '请输入用户名' }],\r\n                            })(\r\n                                <Input size={'large'} prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item validateStatus={passwordErr ? 'error' : ''} help={passwordErr || ''}>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码' }],\r\n                            })(\r\n                                <Input type='password' size={'large'} prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(\r\n                                <Checkbox>记住我</Checkbox>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item  className={style.login_btn_group}>\r\n                            <Button\r\n                                disabled={this.hasErrors(getFieldsError())}\r\n                                size={'large'} type=\"primary\" htmlType=\"submit\" className={style.login_btn}>登录</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        this.props.form.validateFields();\r\n    }\r\n    handleRequest = ({userName, password}) => {\r\n          request({\r\n              url: \"/api/login\",\r\n              data: {\r\n                  user: userName,\r\n                  password: password\r\n              },\r\n              success:(data) => {\r\n                  this.setState({\r\n                      loginSuccess: true\r\n                  })\r\n              },\r\n              fail: (data) => {\r\n                  console.log('fail');\r\n              }\r\n          })\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if(err){\r\n\r\n            }else{\r\n                this.handleRequest(values);\r\n            }\r\n        });\r\n    };\r\n    hasErrors = (fieldsError) => {\r\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    }\r\n}\r\nlet LoginForm = Form.create()(Login);\r\nexport default LoginForm;\r\n"],"sourceRoot":""}