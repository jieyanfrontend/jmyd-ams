{"version":3,"sources":["webpack:///./pages/login/login.js","webpack:///./helpers/request.js","webpack:///./helpers/handle-formdata.js","webpack:///./helpers/handle-json.js","webpack:///./pages/login/login.css"],"names":["_react","__webpack_require__","_reactRouterDom","_login","_request","Login","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleRequest","_ref","userName","password","_request2","default","url","data","user","success","setState","loginSuccess","fail","console","log","handleSubmit","e","preventDefault","form","validateFields","err","values","hasErrors","fieldsError","keys","some","field","state","_props$form","getFieldDecorator","isFieldTouched","getFieldError","getFieldsError","userNameErr","passwordErr","_react2","createElement","className","_login2","container","Redirect","to","_form2","onSubmit","Item","validateStatus","help","rules","required","message","_input2","size","prefix","_icon2","type","style","color","placeholder","valuePropName","initialValue","_checkbox2","login_btn_group","_button2","disabled","htmlType","login_btn","Component","LoginForm","create","request","_ref$method","method","undefined","_ref$postType","postType","_ref$data","_ref$success","_ref$fail","_ref$complete","complete","Error","xml","XMLHttpRequest","open","postData","setRequestHeader","_handleJson2","_handleFormdata2","onreadystatechange","readyState","status","JSON","parse","responseText","code","parseInt","alert","send","handleFormData","ret","FormData","map","k","Array","isArray","forEach","d","append","handleJson","stringify","module","exports"],"mappings":"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","file":"scripts/8.4492b9c0e851fd43b86f.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Input, Icon, Button, Checkbox } from 'antd';\r\nimport style from './login.css';\r\nimport request from '../../helpers/request';\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loginSuccess: false\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let { loginSuccess } = this.state;\r\n        const { getFieldDecorator, isFieldTouched, getFieldError, getFieldsError } = this.props.form;\r\n        const userNameErr = isFieldTouched('userName') && getFieldError('userName');\r\n        const passwordErr = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <div className={style.container}>\r\n                {loginSuccess ? <Redirect to='/'/>: null}\r\n                <div className={style.form}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Item validateStatus={userNameErr ? 'error' : ''} help={userNameErr || ''}>\r\n                            {getFieldDecorator('userName', {\r\n                                rules: [{ required: true, message: '请输入用户名' }],\r\n                            })(\r\n                                <Input size={'large'} prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item validateStatus={passwordErr ? 'error' : ''} help={passwordErr || ''}>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码' }],\r\n                            })(\r\n                                <Input type='password' size={'large'} prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"密码\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(\r\n                                <Checkbox>记住我</Checkbox>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item  className={style.login_btn_group}>\r\n                            <Button\r\n                                disabled={this.hasErrors(getFieldsError())}\r\n                                size={'large'} type=\"primary\" htmlType=\"submit\" className={style.login_btn}>登录</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        this.props.form.validateFields();\r\n    }\r\n    handleRequest = ({userName, password}) => {\r\n          request({\r\n              url: \"/api/login\",\r\n              data: {\r\n                  user: userName,\r\n                  password: password\r\n              },\r\n              success:(data) => {\r\n                  this.setState({\r\n                      loginSuccess: true\r\n                  })\r\n              },\r\n              fail: (data) => {\r\n                  console.log('fail');\r\n              }\r\n          })\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if(err){\r\n\r\n            }else{\r\n                this.handleRequest(values);\r\n            }\r\n        });\r\n    };\r\n    hasErrors = (fieldsError) => {\r\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    }\r\n}\r\nlet LoginForm = Form.create()(Login);\r\nexport default LoginForm;\r\n","import handleJson from './handle-json';\r\nimport handleFormData from './handle-formdata';\r\n\r\nfunction request({ url, method = 'POST', postType = 'json' ,data = {}, success = () => {}, fail = () => {}, complete = () => {}}) {\r\n    if(!url){\r\n        throw new Error('url参数不可缺省');\r\n    }\r\n    let xml = new XMLHttpRequest();\r\n    xml.open(method, url);\r\n    let postData ;\r\n    switch (postType){\r\n        case 'json':\r\n            xml.setRequestHeader('Content-Type', 'application/json');\r\n            postData = handleJson(data);\r\n            break;\r\n        case 'formdata':\r\n            // xml.setRequestHeader('Content-Type', \"application/vnd.ms-excel\");\r\n            postData = handleFormData(data);\r\n            break;\r\n        default:\r\n            xml.setRequestHeader('Content-Type', 'application/json');\r\n            postData = handleJson(data);\r\n    }\r\n    xml.onreadystatechange = () => {\r\n        if(xml.readyState === 4){\r\n            if(xml.status === 200){\r\n                let data = JSON.parse(xml.responseText);\r\n                let code = data.code;\r\n                try{\r\n                    if(code === undefined) throw new Error('code is not defined');\r\n                }catch(e){\r\n                    data = JSON.parse(data);\r\n                }\r\n                if(parseInt(data.code) === 200){\r\n                    success(data);\r\n                }else{\r\n                    fail(data);\r\n                }\r\n            }else{\r\n                alert('请求遇到了问题，请稍后再尝试');\r\n                fail();\r\n            }\r\n            complete();\r\n        }\r\n    };\r\n    xml.send(postData);\r\n}\r\nexport default request;\r\n","let handleFormData = (data) => {\r\n    let ret = new FormData();\r\n    Object.keys(data).map(k => {\r\n        if(Array.isArray(data[k])){\r\n            data[k].forEach(d => {\r\n                ret.append(k,d);\r\n            })\r\n        }else{\r\n            ret.append(k,data[k]);\r\n        }\r\n    });\r\n    return ret;\r\n};\r\nexport default handleFormData;","let handleJson = (data) => {\r\n    return JSON.stringify(data);\r\n};\r\nexport default handleJson;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login__container\",\"form\":\"login__form\",\"login_btn_group\":\"login__login_btn_group\",\"login_btn\":\"login__login_btn\"};"],"sourceRoot":""}